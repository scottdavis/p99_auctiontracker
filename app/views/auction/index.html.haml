- content_for :header do
  #search
    %p
      Search:
      - form_for :search, {:url => auction_search_path, :method => :post } do |f| 
        = f.text_field :search, :value => @search
        = f.submit :search
  
#auction_data
  %p
    %strong
      = link_to('Upload a log file / directions for logging', new_auction_path)
  #pagination
    = letter_pagination(@letter)
  %table{:cellspacing => 0, :cellpadding => 5}
    %thead
      %tr
        %th
          Item
        %th
          Mean Price
        %th
          Std Deviation
        %th
          Max
        %th
          Min
        %th 
          Times seen
        %th
          10 Day mean
        %th
          30 Day mean
        %th
    %tbody
      -	@items.each do |item|
        - next if item.auctions.not_hidden.blank?
        - prices = item.auctions.not_hidden.map{|a| a.price}.compact.sort
        %tr{:class => cycle('alt','')}
          %td 
            = link_to(item.name, item_path(item.id))
          %td
            = item.auctions.not_hidden.average(:price)
          %td
            = standard_deviation(item.auctions.not_hidden.map(&:price)).round(2)
          %td
            = item.auctions.not_hidden.maximum(:price)
          %td
            = item.auctions.not_hidden.minimum(:price)
          %td
            = prices.size
          %td
            - math = item.auctions.not_hidden.average(:price, :conditions => {:time => 10.days.ago..Time.now})
            = math.blank? ? 0.0 : math.round
          %td
            - math = item.auctions.not_hidden.average(:price, :conditions => {:time => 30.days.ago..Time.now})
            = math.blank? ? 0.0 : math.round
          %td 
            = link_to("Remove", item_path(item, :letter => params[:letter]), :method => :delete)
  #pagination
    = letter_pagination(@letter)
